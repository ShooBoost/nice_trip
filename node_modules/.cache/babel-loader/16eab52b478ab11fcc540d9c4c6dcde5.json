{"remainingRequest":"/Users/linyoungshiu/Lobby(OwO)/案子/個人作品｜做簡約好玩的東西/大量練習的過程/前端/hang_out_taiwan/node_modules/babel-loader/lib/index.js!/Users/linyoungshiu/Lobby(OwO)/案子/個人作品｜做簡約好玩的東西/大量練習的過程/前端/hang_out_taiwan/node_modules/eslint-loader/index.js??ref--14-0!/Users/linyoungshiu/Lobby(OwO)/案子/個人作品｜做簡約好玩的東西/大量練習的過程/前端/hang_out_taiwan/src/mixins/getTdxDataMixin.js","dependencies":[{"path":"/Users/linyoungshiu/Lobby(OwO)/案子/個人作品｜做簡約好玩的東西/大量練習的過程/前端/hang_out_taiwan/src/mixins/getTdxDataMixin.js","mtime":1652074069600},{"path":"/Users/linyoungshiu/Lobby(OwO)/案子/個人作品｜做簡約好玩的東西/大量練習的過程/前端/hang_out_taiwan/babel.config.js","mtime":1636355295900},{"path":"/Users/linyoungshiu/Lobby(OwO)/案子/個人作品｜做簡約好玩的東西/大量練習的過程/前端/hang_out_taiwan/node_modules/cache-loader/dist/cjs.js","mtime":1636355256849},{"path":"/Users/linyoungshiu/Lobby(OwO)/案子/個人作品｜做簡約好玩的東西/大量練習的過程/前端/hang_out_taiwan/node_modules/babel-loader/lib/index.js","mtime":1636355259083},{"path":"/Users/linyoungshiu/Lobby(OwO)/案子/個人作品｜做簡約好玩的東西/大量練習的過程/前端/hang_out_taiwan/node_modules/eslint-loader/index.js","mtime":1636355257165}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/linyoungshiu/Lobby(OwO)/案子/個人作品｜做簡約好玩的東西/大量練習的過程/前端/hang_out_taiwan/src/mixins/getTdxDataMixin.js"],"names":["qs","axios","data","tdxData","methods","getSpotApiUrl","apiType","city","select","filter","orderby","top","skip","spatialFilter","customParameters","type","valueList","apiParameterString","apiParameterList","forEach","item","length","itemValue","join","push","apiUrl","getAuthorizationHeader","parameter","grant_type","client_id","client_secret","auth_url","method","url","stringify","headers","res","accesstoken","authorization","access_token","getSpotsFromTdx","apiTypeAndParameters","_this","get","console","log","getAllCitiesInTaiwan"],"mappings":";;;;;;;AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACbC,EAAAA,IADa,kBACN;AACL,WAAO;AACLC,MAAAA,OAAO,EAAE;AADJ,KAAP;AAGD,GALY;AAMbC,EAAAA,OAAO,EAAE;AACP;AACAC,IAAAA,aAFO,+BAWJ;AAAA,8BARDC,OAQC;AAAA,UARDA,OAQC,6BARS,YAQT;AAAA,2BAPDC,IAOC;AAAA,UAPDA,IAOC,0BAPM,IAON;AAAA,6BANDC,MAMC;AAAA,UANDA,MAMC,4BANQ,EAMR;AAAA,6BALDC,MAKC;AAAA,UALDA,MAKC,4BALQ,EAKR;AAAA,8BAJDC,OAIC;AAAA,UAJDA,OAIC,6BAJS,EAIT;AAAA,0BAHDC,GAGC;AAAA,UAHDA,GAGC,yBAHK,EAGL;AAAA,2BAFDC,IAEC;AAAA,UAFDA,IAEC,0BAFM,EAEN;AAAA,oCADDC,aACC;AAAA,UADDA,aACC,mCADe,EACf;AACD,UAAIC,gBAAgB,GAAG,CACrB;AAAEC,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,SAAS,EAAER;AAA7B,OADqB,EAErB;AAAEO,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,SAAS,EAAEP;AAA7B,OAFqB,EAGrB;AAAEM,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,SAAS,EAAEN;AAA9B,OAHqB,EAIrB;AAAEK,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,SAAS,EAAEL;AAA1B,OAJqB,EAKrB;AAAEI,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,SAAS,EAAEJ;AAA3B,OALqB,EAMrB;AAAEG,QAAAA,IAAI,EAAE,eAAR;AAAyBC,QAAAA,SAAS,EAAEH;AAApC,OANqB,CAAvB;AAQA,UAAII,kBAAkB,GAAG,EAAzB;AACA,UAAIC,gBAAgB,GAAG,EAAvB,CAVC,CAWD;;AAEAJ,MAAAA,gBAAgB,CAACK,OAAjB,CAAyB,UAAUC,IAAV,EAAgB;AACvC,YAAIA,IAAI,CAACJ,SAAL,CAAeK,MAAf,KAA0B,CAA9B,EAAiC;AAC/B,cAAIC,SAAS,GAAG,EAAhB;AACAA,UAAAA,SAAS,eAAQF,IAAI,CAACL,IAAb,MAAT;AACAO,UAAAA,SAAS,IAAIF,IAAI,CAACJ,SAAL,CAAeK,MAAf,KAA0B,CAA1B,GAA8BD,IAAI,CAACJ,SAAL,CAAe,CAAf,CAA9B,GAAkDI,IAAI,CAACJ,SAAL,CAAeO,IAAf,CAAoB,QAApB,CAA/D;AACAL,UAAAA,gBAAgB,CAACM,IAAjB,CAAsBF,SAAtB;AACD;AACF,OAPD;;AAQA,UAAIf,IAAJ,EAAU;AACRD,QAAAA,OAAO,eAAQC,IAAR,CAAP;AACD;;AACD,UAAIW,gBAAgB,CAACG,MAAjB,KAA4B,CAAhC,EAAmC;AACjCJ,QAAAA,kBAAkB,GAAGC,gBAAgB,CAACK,IAAjB,CAAsB,GAAtB,CAArB;AACAN,QAAAA,kBAAkB,IAAI,GAAtB;AACD,OA3BA,CA4BD;;;AACA,UAAIQ,MAAM,+DAAwDnB,OAAxD,cAAmEW,kBAAnE,iBAAV,CA7BC,CA8BD;;AACA,aAAOQ,MAAP;AACD,KA3CM;AA4CDC,IAAAA,sBA5CC,oCA4CwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBC,gBAAAA,SADuB,GACX;AAChBC,kBAAAA,UAAU,EAAE,oBADI;AAEhBC,kBAAAA,SAAS,EAAE,8BAFK;AAGhBC,kBAAAA,aAAa,EAAE;AAHC,iBADW;AAMzBC,gBAAAA,QANyB;AAAA;AAAA;AAAA,uBAQX9B,KAAK,CAAC;AACpB+B,kBAAAA,MAAM,EAAE,MADY;AAEpBC,kBAAAA,GAAG,EAAEF,QAFe;AAGpB7B,kBAAAA,IAAI,EAAEF,EAAE,CAACkC,SAAH,CAAaP,SAAb,CAHc;AAIpBQ,kBAAAA,OAAO,EAAE;AAAE,oCAAgB;AAAlB;AAJW,iBAAD,CARM;;AAAA;AAQvBC,gBAAAA,GARuB;AAcvBC,gBAAAA,WAduB,GAcTD,GAAG,CAAClC,IAdK;AAAA,iDAepB;AACLoC,kBAAAA,aAAa,mBAAYD,WAAW,CAACE,YAAxB;AADR,iBAfoB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqB9B,KAjEM;AAkEDC,IAAAA,eAlEC,2BAkEeC,oBAlEf,EAkEqC;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACtCC,gBAAAA,KADsC,GAC9B,MAD8B;AAEtCjB,gBAAAA,MAFsC,GAE7BiB,KAAK,CAACrC,aAAN,CAAoBoC,oBAApB,CAF6B;AAAA;AAAA,+BAKxBxC,KALwB;AAAA,+BAMtC;AACA;AACA;AACA;AACA;AACA;AAXsC,0BAYnCwB,MAZmC;AAAA;AAAA,uBAcrB,MAAI,CAACC,sBAAL,EAdqB;;AAAA;AAAA;AAAA;AAcpCS,kBAAAA,OAdoC;AAAA;AAAA;AAAA,oCAKlBQ,GALkB;;AAAA;AAKpCP,gBAAAA,GALoC;AAAA;AAAA,uBAmB3BA,GAAG,CAAClC,IAnBuB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAqBxC0C,gBAAAA,OAAO,CAACC,GAAR;;AArBwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuB3C,KAzFM;AA2FDC,IAAAA,oBA3FC,kCA2FsB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBrB,gBAAAA,MADuB,GAEzB,qEAFyB;AAAA;AAAA,+BAKTxB,KALS;AAAA,+BAKCwB,MALD;AAAA;AAAA,uBAMR,MAAI,CAACC,sBAAL,EANQ;;AAAA;AAAA;AAAA;AAMvBS,kBAAAA,OANuB;AAAA;AAAA;AAAA,oCAKHQ,GALG;;AAAA;AAKrBP,gBAAAA,GALqB;AAAA;AAAA,uBASZA,GAAG,CAAClC,IATQ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAWzB0C,gBAAAA,OAAO,CAACC,GAAR;;AAXyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAa5B,KAxGM,CAyGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA1KO;AANI,CAAf","sourcesContent":["import qs from \"qs\";\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      tdxData: [],\n    };\n  },\n  methods: {\n    // apiType 為 'ScenicSpot' 或 'Restaurant' 或 'Activity'\n    getSpotApiUrl({\n      apiType = \"ScenicSpot\",\n      city = null,\n      select = [],\n      filter = [],\n      orderby = [],\n      top = [],\n      skip = [],\n      spatialFilter = [],\n    }) {\n      let customParameters = [\n        { type: \"select\", valueList: select },\n        { type: \"filter\", valueList: filter },\n        { type: \"orderby\", valueList: orderby },\n        { type: \"top\", valueList: top },\n        { type: \"skip\", valueList: skip },\n        { type: \"spatialFilter\", valueList: spatialFilter },\n      ];\n      let apiParameterString = \"\";\n      let apiParameterList = [];\n      // console.log(\"customParameters\", customParameters)\n\n      customParameters.forEach(function (item) {\n        if (item.valueList.length !== 0) {\n          let itemValue = \"\";\n          itemValue += `$${item.type}=`;\n          itemValue += item.valueList.length === 1 ? item.valueList[0] : item.valueList.join(\"%2C%20\");\n          apiParameterList.push(itemValue);\n        }\n      });\n      if (city) {\n        apiType += `/${city}`;\n      }\n      if (apiParameterList.length !== 0) {\n        apiParameterString = apiParameterList.join(\"&\");\n        apiParameterString += \"&\";\n      }\n      // let apiUrl = `https://ptx.transportdata.tw/MOTC/v2/Tourism/${apiType}?${apiParameterString}$format=JSON`;\n      let apiUrl = `https://tdx.transportdata.tw/api/basic/v2/Tourism/${apiType}?${apiParameterString}$format=JSON`;\n      // console.log(\"apiUrl\", apiUrl)\n      return apiUrl;\n    },\n    async getAuthorizationHeader() {\n      const parameter = {\n        grant_type: \"client_credentials\",\n        client_id: \"shooboost-0659506a-9440-4f49\",\n        client_secret: \"f075a3b1-3567-47d5-9926-e413ba6d3d42\",\n      };\n      let auth_url = `https://tdx.transportdata.tw/auth/realms/TDXConnect/protocol/openid-connect/token`;\n      try {\n        let res = await axios({\n          method: \"POST\",\n          url: auth_url,\n          data: qs.stringify(parameter),\n          headers: { \"content-type\": \"application/x-www-form-urlencoded\" },\n        });\n        let accesstoken = res.data;\n        return {\n          authorization: `Bearer ${accesstoken.access_token}`,\n        }\n      } catch (err) {\n        return err;\n      }\n    },\n    async getSpotsFromTdx(apiTypeAndParameters) {\n      var _this = this;\n      var apiUrl = _this.getSpotApiUrl(apiTypeAndParameters);\n\n      try {\n        let res = await axios.get(\n          // $select     Picture, Name, Address, ZipCode\n          // $orderby    SrcUpdateTime desc; 排序按照資料更新日期最新的開始\n          // $top        12; 取 12 筆資料\n          // $skip\t     10; 跳過前 10 筆資料\n          // 取得觀光景點資料\n          // \"https://ptx.transportdata.tw/MOTC/v2/Tourism/ScenicSpot?$select=Picture%2C%20Name%2C%20Address%2C%20ZipCode&$orderby=SrcUpdateTime%20desc&$top=12&$skip=10&$format=JSON\",\n          `${apiUrl}`,\n          {\n            headers: await this.getAuthorizationHeader(),\n          }\n        );\n        // console.log(apiUrl, res.data);\n\n        return await res.data;\n      } catch (err) {\n        console.log(err);\n      }\n    },\n\n    async getAllCitiesInTaiwan() {\n      var apiUrl =\n        \"https://tdx.transportdata.tw/api/basic/v2/Basic/City?%24format=JSON\";\n\n      try {\n        let res = await axios.get(apiUrl, {\n          headers: await this.getAuthorizationHeader(),\n        });\n        // console.log(\" getAllCitiesInTaiwan\", apiUrl, res.data);\n        return await res.data;\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    // async getTdxGeoData({\n    //   apiType = \"GeoCode\",\n    //   address = \"\",\n    //   locX = \"\",\n    //   locY = \"\",\n    // }) {\n    //   // apiType 為 GeoCode or GeoLocating\n    //   let apiUrl = \"\";\n    //   switch (apiType) {\n    //     case \"GeoCode\":\n    //       apiUrl = `https://gist.motc.gov.tw/gist_api/V3/Map/GeoCode/Coordinate/Address/${address}`;\n    //       break;\n    //     case \"GeoLocating\":\n    //       apiUrl = `https://gist.motc.gov.tw/gist_api/V3/Map/GeoLocating/District/LocationX/${locX}/LocationY/${locY}?$format=JSON`;\n    //       break;\n    //   }\n\n    //   try {\n    //     let res = await axios.get(`${apiUrl}`, {\n    //       headers: this.getAuthorizationHeader(),\n    //     });\n    //     console.log(\"+++++++getTdxGeoData+++++++++\");\n\n    //     return await res.data;\n    //   } catch (err) {\n    //     console.log(err);\n    //     return await null;\n    //   }\n    // },\n\n    // async getCityName({ address, locX, locY }) {\n    //   if (locX && locY) {\n    //     let cityName = await this.getTdxGeoData({\n    //       apiType: \"GeoLocating\",\n    //       locX: locX,\n    //       locY: locY,\n    //     });\n    //     if (await cityName) {\n    //       return cityName[0].CityName;\n    //     }\n    //   } else if (address) {\n    //     let geoByAddress = await this.getTdxGeoData({\n    //       apiType: \"GeoCode\",\n    //       address: address,\n    //     });\n    //     geoByAddress = geoByAddress[0].Geometry.split(\" \");\n\n    //     let [locXByAddress, locYByAddress] = [\n    //       geoByAddress[1].replace(\"(\", \"\"),\n    //       geoByAddress[2].replace(\")\", \"\"),\n    //     ];\n    //     let geoByXY = await this.getTdxGeoData({\n    //       apiType: \"GeoLocating\",\n    //       locX: locXByAddress,\n    //       locY: locYByAddress,\n    //     });\n\n    //     // 會不會我一開始直接切地址前三個字就好了 XD + QAQ\n    //     let cityName = geoByXY.CityName\n    //       ? geoByXY.CityName\n    //       : address.slice(0, 3);\n    //     return await cityName;\n    //   } else {\n    //     return \"\";\n    //   }\n    // },\n  },\n};\n"]}]}